{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Fetchcatlist } from \"./servers\";\nexport const FactsList = () => {\n  _s();\n\n  const [Facts, setFacts] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    Fetchcatlist().then(facts => {\n      setLoading(false);\n      facts.forEach(element => {\n        Facts.push(element);\n      });\n      setFacts([...Facts]);\n    }).catch(err => {\n      setLoading(false);\n      console.log(err);\n    });\n  }, []);\n  return {\n    Facts\n  };\n};\n\n_s(FactsList, \"jQPCRyS2qeuNygzaV8JEbZyXuw0=\");\n\n_c = FactsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FactsList\");","map":{"version":3,"sources":["/Users/yongjishen/Desktop/INFO6250/student-ShenYongji/work/react-rest/src/FactsList.jsx"],"names":["useState","useEffect","Fetchcatlist","FactsList","Facts","setFacts","isLoading","setLoading","then","facts","forEach","element","push","catch","err","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,SAAQC,YAAR,QAA2B,WAA3B;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAK;AAAA;;AAE1B,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBL,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACM,SAAD,EAAYC,UAAZ,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAG,MAAK;AACbM,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAL,IAAAA,YAAY,GACXM,IADD,CACOC,KAAD,IAAS;AACbF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,KAAK,CAACC,OAAN,CAAcC,OAAO,IAAI;AACvBP,QAAAA,KAAK,CAACQ,IAAN,CAAWD,OAAX;AACD,OAFD;AAGAN,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CAAR;AACD,KAPD,EAQCS,KARD,CAQQC,GAAD,IAAO;AACZP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAXD;AAYD,GAdM,EAcL,EAdK,CAAT;AAiBE,SACI;AAACV,IAAAA;AAAD,GADJ;AAIL,CA1BM;;GAAMD,S;;KAAAA,S","sourcesContent":["import { useState,useEffect } from \"react\";\nimport {Fetchcatlist} from \"./servers\";\n\nexport const FactsList = () =>{\n\n    const [Facts,setFacts] = useState([])\n    const [isLoading, setLoading] = useState(false)\n\n    useEffect(  () =>{\n        setLoading(true)\n        Fetchcatlist()\n        .then((facts)=>{\n          setLoading(false)\n          facts.forEach(element => {\n            Facts.push(element)\n          });\n          setFacts([...Facts])\n        })\n        .catch((err)=>{\n          setLoading(false)\n          console.log(err)\n        })\n      },[]);\n\n    \n      return (\n          {Facts}\n      )\n\n}"]},"metadata":{},"sourceType":"module"}