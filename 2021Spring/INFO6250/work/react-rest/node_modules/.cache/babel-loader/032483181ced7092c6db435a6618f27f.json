{"ast":null,"code":"var _jsxFileName = \"/Users/yongjishen/Desktop/INFO6250/student-ShenYongji/work/react-rest/src/FactsList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Fetchcatlist } from \"./servers\";\nimport { DisplayList } from \"./DisplayList\";\nimport { DisplayButton } from \"./DisplayButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FactsList = ({\n  setList,\n  maxLength\n}) => {\n  _s();\n\n  const [locFacts, setlocFacts] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [startPage, setstartPage] = useState(0);\n  useEffect(() => {\n    setLoading(true);\n    Fetchcatlist().then(facts => {\n      setLoading(false);\n      facts.forEach(element => {\n        setlocFacts(facts);\n      });\n      setlocFacts(facts);\n      setList(facts);\n    }).catch(err => {\n      setLoading(false);\n      console.log(err);\n    });\n  }, [setList]); // const pageCount = parseInt(locFacts.length/maxLength) + (locFacts.length%maxLength?1:0)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(DisplayList, {\n        size: maxLength,\n        facts: locFacts,\n        start: startPage < 0 ? 0 : startPage,\n        length: locFacts.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DisplayButton, {\n        startPage: startPage,\n        maxLength: maxLength,\n        setstartPage: setstartPage,\n        length: locFacts.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 11\n  }, this);\n};\n\n_s(FactsList, \"JLX7OuWqPlbiEpSdMWdJ5qMe6rQ=\");\n\n_c = FactsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FactsList\");","map":{"version":3,"sources":["/Users/yongjishen/Desktop/INFO6250/student-ShenYongji/work/react-rest/src/FactsList.jsx"],"names":["useState","useEffect","Fetchcatlist","DisplayList","DisplayButton","FactsList","setList","maxLength","locFacts","setlocFacts","isLoading","setLoading","startPage","setstartPage","then","facts","forEach","element","catch","err","console","log","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,SAAQC,YAAR,QAA2B,WAA3B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,aAAT,QAA8B,iBAA9B;;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,OAAD;AAASC,EAAAA;AAAT,CAAD,KAAwB;AAAA;;AAE7C,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBT,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACU,SAAD,EAAYC,UAAZ,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,CAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAE,MAAK;AACZU,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAT,IAAAA,YAAY,GACXY,IADD,CACOC,KAAD,IAAS;AACbJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEAI,MAAAA,KAAK,CAACC,OAAN,CAAcC,OAAO,IAAI;AACvBR,QAAAA,WAAW,CAACM,KAAD,CAAX;AACD,OAFD;AAGAN,MAAAA,WAAW,CAACM,KAAD,CAAX;AACAT,MAAAA,OAAO,CAACS,KAAD,CAAP;AACD,KATD,EAUCG,KAVD,CAUQC,GAAD,IAAO;AACZR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAbD;AAcD,GAhBM,EAgBL,CAACb,OAAD,CAhBK,CAAT,CAN6C,CAwB3C;;AACA,sBACI;AAAA,cACGI,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAER;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEH,SAAnB;AAA8B,QAAA,KAAK,EAAIC,QAAvC;AAAiD,QAAA,KAAK,EAAII,SAAS,GAAC,CAAV,GAAY,CAAZ,GAAcA,SAAxE;AAAmF,QAAA,MAAM,EAAIJ,QAAQ,CAACc;AAAtG;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAe,QAAA,SAAS,EAAIV,SAA5B;AAAuC,QAAA,SAAS,EAAEL,SAAlD;AAA6D,QAAA,YAAY,EAAEM,YAA3E;AAAyF,QAAA,MAAM,EAAIL,QAAQ,CAACc;AAA5G;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYL,CArCM;;GAAMjB,S;;KAAAA,S","sourcesContent":["import { useState,useEffect } from \"react\";\nimport {Fetchcatlist} from \"./servers\";\nimport { DisplayList } from \"./DisplayList\";\nimport { DisplayButton } from \"./DisplayButton\";\n\nexport const FactsList = ({setList,maxLength}) =>{\n\n    const [locFacts,setlocFacts] = useState([])\n    const [isLoading, setLoading] = useState(false)\n    const [startPage, setstartPage] = useState(0)\n\n    useEffect( () =>{\n        setLoading(true)\n        Fetchcatlist()\n        .then((facts)=>{\n          setLoading(false)\n\n          facts.forEach(element => {\n            setlocFacts(facts)\n          });\n          setlocFacts(facts)\n          setList(facts)\n        })\n        .catch((err)=>{\n          setLoading(false)\n          console.log(err)\n        })\n      },[setList]);\n\n      // const pageCount = parseInt(locFacts.length/maxLength) + (locFacts.length%maxLength?1:0)\n      return (\n          <div>\n            {isLoading ? \n              <div>Loading data</div> : \n              <div>\n                <DisplayList size={maxLength} facts = {locFacts} start = {startPage<0?0:startPage} length = {locFacts.length}/>\n                <DisplayButton startPage = {startPage} maxLength={maxLength} setstartPage={setstartPage} length = {locFacts.length}/>\n              </div>\n            }\n          </div>\n      )\n\n}"]},"metadata":{},"sourceType":"module"}