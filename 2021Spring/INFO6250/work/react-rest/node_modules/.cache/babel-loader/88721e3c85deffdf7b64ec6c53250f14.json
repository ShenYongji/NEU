{"ast":null,"code":"var _jsxFileName = \"/Users/yongjishen/Desktop/INFO6250/student-ShenYongji/work/react-rest/src/DisplayList.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DisplayList = ({\n  start,\n  size,\n  facts\n}) => {\n  let loc_start = start;\n  let loc_end = start;\n\n  if (loc_start < 0) {\n    loc_start = 0;\n  }\n\n  const formattedFacts = facts.slice(loc_start, loc_start + size).map(fact => /*#__PURE__*/_jsxDEV(\"li\", {\n    \"data-index\": facts.indexOf(fact),\n    children: [facts.indexOf(fact) + 1, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 101\n    }, this), fact]\n  }, facts.indexOf(fact), true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 14\n  }, this));\n\n  function ShowingFacts() {\n    let result = `${loc_start + 1}-${loc_start + size}`;\n\n    if (loc_start + size > facts.length) {\n      result = `${loc_start + 1}-${facts.length}`;\n    }\n\n    return result;\n  } //console.log(formattedFacts)size={Size} facts = {locFacts} start = {startPage}\n\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [\"Showing Facts: \", ShowingFacts(), formattedFacts]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c = DisplayList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayList\");","map":{"version":3,"sources":["/Users/yongjishen/Desktop/INFO6250/student-ShenYongji/work/react-rest/src/DisplayList.jsx"],"names":["DisplayList","start","size","facts","loc_start","loc_end","formattedFacts","slice","map","fact","indexOf","ShowingFacts","result","length"],"mappings":";;AAAA,OAAO,MAAMA,WAAW,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAOC,EAAAA,IAAP;AAAYC,EAAAA;AAAZ,CAAD,KAAuB;AAC9C,MAAIC,SAAS,GAAGH,KAAhB;AACA,MAAII,OAAO,GAAGJ,KAAd;;AAEA,MAAIG,SAAS,GAAG,CAAhB,EAAkB;AACdA,IAAAA,SAAS,GAAG,CAAZ;AACH;;AACD,QAAME,cAAc,GAAGH,KAAK,CAACI,KAAN,CAAYH,SAAZ,EAAsBA,SAAS,GAACF,IAAhC,EAAsCM,GAAtC,CAA0CC,IAAI,iBAC5D;AAA+B,kBAAYN,KAAK,CAACO,OAAN,CAAcD,IAAd,CAA3C;AAAA,eAAiEN,KAAK,CAACO,OAAN,CAAcD,IAAd,IAAoB,CAArF,eAAuF;AAAA;AAAA;AAAA;AAAA,YAAvF,EAA6FA,IAA7F;AAAA,KAAUN,KAAK,CAACO,OAAN,CAAcD,IAAd,CAAV;AAAA;AAAA;AAAA;AAAA,UADc,CAAvB;;AAIA,WAASE,YAAT,GAAuB;AACnB,QAAIC,MAAM,GAAI,GAAER,SAAS,GAAC,CAAE,IAAGA,SAAS,GAACF,IAAK,EAA9C;;AACA,QAAGE,SAAS,GAACF,IAAV,GAAiBC,KAAK,CAACU,MAA1B,EAAiC;AAC7BD,MAAAA,MAAM,GAAI,GAAER,SAAS,GAAC,CAAE,IAAGD,KAAK,CAACU,MAAO,EAAxC;AACH;;AACD,WAAOD,MAAP;AACH,GAjB6C,CAmB9C;;;AACA,sBACI;AAAA,kCACoBD,YAAY,EADhC,EAEKL,cAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA1BM;KAAMN,W","sourcesContent":["export const DisplayList = ({start,size,facts}) =>{\n    let loc_start = start\n    let loc_end = start\n\n    if (loc_start < 0){\n        loc_start = 0\n    }\n    const formattedFacts = facts.slice(loc_start,loc_start+size).map(fact => \n            (<li key= {facts.indexOf(fact)} data-index={facts.indexOf(fact)}>{facts.indexOf(fact)+1}<br/>{fact}</li>)\n        );\n    \n    function ShowingFacts(){\n        let result = `${loc_start+1}-${loc_start+size}`\n        if(loc_start+size > facts.length){\n            result = `${loc_start+1}-${facts.length}`\n        }\n        return result\n    }\n    \n    //console.log(formattedFacts)size={Size} facts = {locFacts} start = {startPage}\n    return (\n        <ul>\n            Showing Facts: {ShowingFacts()}\n            {formattedFacts}\n        </ul>\n    )\n}"]},"metadata":{},"sourceType":"module"}