{"ast":null,"code":"import compareword from './secret';\n\nfunction rendermessage(guess) {\n  let message = '';\n  let type;\n\n  if (!guess.trim()) {\n    message = `\"${guess}\" was not a valid word (No Empty Word)`;\n    type = 'warning';\n  } else {\n    const loc_guess = guess.trim();\n\n    if (loc_guess.length !== 5) {\n      message = `\"${guess}\" was not a valid word`;\n      type = 'warning';\n    } else {\n      let match = compareword(guess);\n\n      if (match[0]) {\n        message = `\"${guess}\" is the secret word!`;\n        type = 'success';\n      } else {\n        message = `\"${guess}\" had ${match[1]} letters in common`;\n        type = 'info';\n      }\n    }\n  }\n\n  return {\n    type,\n    message\n  };\n}\n\nexport default rendermessage;","map":{"version":3,"sources":["/Users/yongjishen/Desktop/INFO6250/student-ShenYongji/work/basic-react/src/message.js"],"names":["compareword","rendermessage","guess","message","type","trim","loc_guess","length","match"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,UAAxB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AACzB,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,IAAJ;;AACA,MAAG,CAACF,KAAK,CAACG,IAAN,EAAJ,EAAiB;AACbF,IAAAA,OAAO,GAAK,IAAGD,KAAM,wCAArB;AACAE,IAAAA,IAAI,GAAG,SAAP;AACH,GAHD,MAII;AACF,UAAME,SAAS,GAAGJ,KAAK,CAACG,IAAN,EAAlB;;AACA,QAAGC,SAAS,CAACC,MAAV,KAAqB,CAAxB,EAA0B;AACxBJ,MAAAA,OAAO,GAAK,IAAGD,KAAM,wBAArB;AACAE,MAAAA,IAAI,GAAG,SAAP;AACD,KAHD,MAII;AACF,UAAII,KAAK,GAAGR,WAAW,CAACE,KAAD,CAAvB;;AACA,UAAGM,KAAK,CAAC,CAAD,CAAR,EAAY;AACVL,QAAAA,OAAO,GAAI,IAAGD,KAAM,uBAApB;AACAE,QAAAA,IAAI,GAAG,SAAP;AACD,OAHD,MAII;AACFD,QAAAA,OAAO,GAAI,IAAGD,KAAM,SAAQM,KAAK,CAAC,CAAD,CAAI,oBAArC;AACAJ,QAAAA,IAAI,GAAG,MAAP;AACD;AACF;AACF;;AAED,SAAO;AAACA,IAAAA,IAAD;AAAMD,IAAAA;AAAN,GAAP;AACH;;AAED,eAAeF,aAAf","sourcesContent":["import compareword from './secret'\n\nfunction rendermessage(guess){\n    let message = ''\n    let type\n    if(!guess.trim()){\n        message =  `\"${guess}\" was not a valid word (No Empty Word)`\n        type = 'warning'\n    }\n    else{\n      const loc_guess = guess.trim()\n      if(loc_guess.length !== 5){\n        message =  `\"${guess}\" was not a valid word`\n        type = 'warning'\n      }\n      else{\n        let match = compareword(guess)\n        if(match[0]){\n          message = `\"${guess}\" is the secret word!`\n          type = 'success'\n        }\n        else{\n          message = `\"${guess}\" had ${match[1]} letters in common`\n          type = 'info'\n        }\n      }\n    }\n\n    return {type,message}\n}\n\nexport default rendermessage;"]},"metadata":{},"sourceType":"module"}